module.exports = class ticketEasy {
  
  /* Create Ticket */
  createTicket(option){
    if(!option.message) throw new Error("createTicket | Option message is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    
    if(!option.supportRole) throw new Error("createTicket | Option supportRole is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    let role = option.message.guild.roles.cache.find(rl => rl.name === option.supportRole) || option.message.guild.roles.cache.get(option.supportRole)
    if(!role) throw new Error("createTicket | Supplied role is invalid. Confused? Join our support server: https://discord.gg/MXQzBmV")
    
    if(option.ticketParent){
      let channel = option.message.guild.channels.cache.get(option.ticketParent) || option.message.guild.channels.cache.find(ch => ch.name === option.ticketParent)
      if(!channel) throw new Error("createTicket | Supplied channel is invalid. Confused? Join our support server: https://discord.gg/MXQzBmV")
      if(!channel.type === "category") throw new Error("createTicket | Option ticketParent's type is not a category. Confused? Join our support server: https://discord.gg/MXQzBmV")
    }
    
    if(!option.ticketMessage) option.ticketMessage = `${option.message.author}, your ticket has been successfully created.`
    
    if(!option.ticketTopic) option.ticketTopic = " "
    
    if(!option.ticketName) option.ticketName = `ticket-${option.message.author.tag}`
    
    let everyone = option.message.guild.roles.everyone
    
    let ticketname = option.ticketName
    option.message.guild.channels.create(ticketname, {type: "text"}).then(chan => {
      chan.updateOverwrite(option.message.author, {
        VIEW_CHANNEL: true,
        SEND_MESSAGES: true,
        READ_MESSAGES: true,
        ATTACH_FILE: true,
        READ_MESSAGE_HISTORY: true,
      })
      chan.updateOverwrite(role, {
        VIEW_CHANNEL: true,
        SEND_MESSAGES: true,
        READ_MESSAGES: true,
        ATTACH_FILE: true,
        READ_MESSAGE_HISTORY: true,
      })
      chan.updateOverwrite(everyone, {
        READ_MESSAGES: false,
        VIEW_CHANNEL: false
      })
      
      if(option.ticketParent){
        let channel = option.message.guild.channels.cache.get(option.ticketParent) || option.message.guild.channels.cache.find(ch => ch.name === option.ticketParent)
        if(!channel) throw new Error("createTicket | Option ticketParent is not a valid channel. Confused? Join our support server: https://discord.gg/MXQzBmV")
        if(!channel.type === "category") throw new Error("createTicket | Option ticketParent's type is not a category. Confused? Join our support server: https://discord.gg/MXQzBmV")
        chan.setParent(channel.id)
      }
      
      chan.setTopic(option.ticketTopic)
      
      chan.send(option.ticketMessage)
    })
  }
  
  /* Close Ticket */
  closeTicket(option) {
    if(!option.message) throw new Error("closeTicket | Option message is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    
    option.message.channel.delete()
  }
  
  addMember(option){
    if(!option.message) throw new Error("addMember | Option message is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    if(!option.user) throw new Error("addMember | Option user is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    
    option.message.channel.updateOverwrite(option.user, {
      VIEW_CHANNEL: true,
      SEND_MESSAGES: true,
      READ_MESSAGES: true,
      ATTACH_FILE: true,
      READ_MESSAGE_HISTORY: true,
    })
  }
  
  removeMember(option){
    if(!option.message) throw new Error("removeMember | Option message is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    if(!option.user) throw new Error("removeMember | Option user is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    
    option.message.channel.updateOverwrite(option.user, {
      VIEW_CHANNEL: false,
      SEND_MESSAGES: false,
      READ_MESSAGES: false,
      ATTACH_FILE: false,
      READ_MESSAGE_HISTORY: false,
    })
  }
  
  claimTicket(option) {
    if(!option.message) throw new Error("claimTicket | Option message is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    
    if(!option.supportRole) throw new Error("claimTicket | Option supportRole is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    let role = option.message.guild.roles.cache.find(rl => rl.name === option.supportRole) || option.message.guild.roles.cache.get(option.supportRole)
    if(!role) throw new Error("claimTicket | Supplied role is invalid. Confused? Join our support server: https://discord.gg/MXQzBmV")
    
    option.message.channel.updateOverwrite(role, {
        VIEW_CHANNEL: false,
        SEND_MESSAGES: false,
        READ_MESSAGES: false,
        ATTACH_FILE: false,
        READ_MESSAGE_HISTORY: false,
      })
    option.message.channel.updateOverwrite(option.message.author, {
      VIEW_CHANNEL: true,
      SEND_MESSAGES: true,
      READ_MESSAGES: true,
      ATTACH_FILE: true,
      READ_MESSAGE_HISTORY: true,
    })
  }
  
  unclaimTicket(option) {
    if(!option.message) throw new Error("unclaimTicket | Option message is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    
    if(!option.supportRole) throw new Error("unclaimTicket | Option supportRole is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    let role = option.message.guild.roles.cache.find(rl => rl.name === option.supportRole) || option.message.guild.roles.cache.get(option.supportRole)
    if(!role) throw new Error("unclaimTicket | Supplied role is invalid. Confused? Join our support server: https://discord.gg/MXQzBmV")
    
    option.message.channel.updateOverwrite(role, {
        VIEW_CHANNEL: true,
        SEND_MESSAGES: true,
        READ_MESSAGES: true,
        ATTACH_FILE: true,
        READ_MESSAGE_HISTORY: true,
      })
    option.message.channel.updateOverwrite(option.message.author, {
      VIEW_CHANNEL: false,
      SEND_MESSAGES: false,
      READ_MESSAGES: false,
      ATTACH_FILE: false,
      READ_MESSAGE_HISTORY: false,
    })
  }
  
  renameTicket(option) {
    if(!option.message) throw new Error("renameTicket | Option message is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
    if(!option.name) throw new Error("renameTicket | Option name is missing. Confused? Join our support server: https://discord.gg/MXQzBmV")
  
    option.message.channel.setName(option.name)
  }
}